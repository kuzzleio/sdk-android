apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = "3.0.2"

buildscript {
    ext.kotlin_version = '1.1.60'
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configurations {
    javadocDeps
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.setRoot('src/main')
    }
}

repositories {
    jcenter()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // Temporary using v21, until Travis supports v23+
    compile 'com.android.support:appcompat-v7:21.+'
    compile 'io.socket:socket.io-client:0.6.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.skyscreamer:jsonassert:1.5.0'
    // for not mocking JSONObject
    testCompile files('libs-test/json-20140107.jar')
    androidTestCompile 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:21.0.1'
    javadocDeps 'com.android.support:support-annotations:22.2.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'kuzzle-sdk-android'

    publishedGroupId = 'io.kuzzle'
    libraryName = 'kuzzle-sdk-android'
    artifact = 'sdk-android'

    libraryDescription = 'Kuzzle Android SDK aar'

    siteUrl = 'https://github.com/kuzzleio/sdk-android'
    gitUrl = 'https://github.com/kuzzleio/sdk-android.git'
    githubRepository= 'kuzzleio/sdk-android'

    libraryVersion = version

    developerId = 'kblondel'
    developerName = 'Kevin Blondel'
    developerEmail = 'kblondel@kaliop.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
// from: 'https://raw.githubusercontent.com/nisrulz/JCenter/master/installv1.gradle'
apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

// from: 'https://raw.githubusercontent.com/nisrulz/JCenter/master/bintrayv1.gradle'
apply plugin: 'com.jfrog.bintray'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.javadocDeps + configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
bintray {
    user = System.getenv("bintray_user")
    key = System.getenv("bintray_apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        issueTrackerUrl = siteUrl+'/issues'
        vcsUrl = gitUrl
        licenses = allLicenses
        githubRepo = githubRepository //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
